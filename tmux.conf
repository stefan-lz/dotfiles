#set -g default-terminal "screen-256color"

# set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g default-command "reattach-to-user-namespace -l bash"

setw -g mode-keys vi

# set prefix key to ctrl-space
unbind C-b
set -g prefix C-Space

# start window indexing at 1
set -g base-index 1
set -g pane-base-index 1

# Mouse support
set -g mouse-select-pane on
set -g mouse-select-window on
set -g mouse-resize-pane on

# Scroll your way into copy mode (scrollback buffer)
# and select text for copying with the mouse
# hold down the alt/option key to copy into osx clipboard
setw -g mode-mouse on

set -g repeat-time 2000

#-n: don't need prefix key
#-r: repeat with pressing prefix key again

# rebind x to not prompt on kill
bind-key x kill-pane

# put repeat on next and previous
bind-key -r n next-window
bind-key -r p previous-window

# bindings while in copy mode
bind-key / copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'C-a' start-of-line
bind-key -t vi-copy 'C-e' end-of-line
bind V send-keys "0v\$"

#reverse search up and down
bind-key -t vi-copy '/' search-backward
bind-key -t vi-copy '?' search-forward

# set defaults to open new windows with PWD
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# bind a few common keys I use not care if I'm still holding ctrl
bind-key C-x kill-pane
bind-key C-c new-window -c "#{pane_current_path}"
#bind-key C-; last-pane # used to navigate panes
#bind-key C-l last-window # used to navigate panes
bind-key C-d detach-client

# easier pane navigation
bind-key C-k select-pane -U
bind-key C-j select-pane -D
bind-key C-h select-pane -L
bind-key C-l select-pane -R

# resizing
bind-key -r K resize-pane -U
bind-key -r J resize-pane -D
bind-key -r H resize-pane -L
bind-key -r L resize-pane -R

#setup easier window navigation
#bind-key -n C-q previous-window
#bind-key -n C-w next-window

bind-key / copy-mode
bind h command-prompt -p "(ssh) " "new-window -n '(ssh) %1' 'ssh %1'"
bind S command-prompt -p "(new session) " "new-session -s '%1'"
bind m command-prompt -p "(move window to) " "move-window -t '%1'"
#bind v command-prompt -p "vim: " "split-window 'exec vim %%'"

#https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#set-option -g default-command "/Users/stefanl/Projects/Github/tmux-MacOSX-pasteboard/reattach-to-user-namespace -l bash" # or zsh...

#bind y run "tmux save-buffer - | /Users/stefanl/Projects/Github/tmux-MacOSX-pasteboard/reattach-to-user-namespace pbcopy"
#bind v run "/Users/stefanl/Projects/Github/tmux-MacOSX-pasteboard/reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

#https://github.com/erikw/tmux-powerline
set -g status on
set -g status-interval 2
#set -g status-utf8 on
set -g status-justify "left"
set -g status-left-length 10
set -g status-right-length 140
set -g status-left "#(~/projects/open_source/tmux-powerline/powerline.sh left)"
set -g status-right "#(~/projects/open_source/tmux-powerline/powerline.sh right)"
set -g status-bg colour235
set -g status-fg white
setw -g window-status-bg colour235
setw -g window-status-current-bg yellow
setw -g window-status-current-fg black
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
#set-option -g status-right '#(cat ~/.pomo_stat)'
